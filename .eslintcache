[{"/home/kripa/Documents/Weather-App/react-project/src/index.js":"1","/home/kripa/Documents/Weather-App/react-project/src/components/context.js":"2","/home/kripa/Documents/Weather-App/react-project/src/components/useLocalStorageState.js":"3","/home/kripa/Documents/Weather-App/react-project/src/components/SearchItem/SearchItem.js":"4","/home/kripa/Documents/Weather-App/react-project/src/components/FavouriteItem/FavouriteItem.js":"5","/home/kripa/Documents/Weather-App/react-project/src/components/Modal/Modal.js":"6","/home/kripa/Documents/Weather-App/react-project/src/reportWebVitals.js":"7","/home/kripa/Documents/Weather-App/react-project/src/pages/Recent.js":"8","/home/kripa/Documents/Weather-App/react-project/src/components/WeatherData/WeatherData.js":"9","/home/kripa/Documents/Weather-App/react-project/src/components/NavBar/NavBar.js":"10","/home/kripa/Documents/Weather-App/react-project/src/App.js":"11","/home/kripa/Documents/Weather-App/react-project/src/components/LocalStorage.js":"12","/home/kripa/Documents/Weather-App/react-project/src/pages/Home.js":"13","/home/kripa/Documents/Weather-App/react-project/src/pages/Favorite.js":"14","/home/kripa/Documents/Weather-App/react-project/src/components/SessionStorage.js":"15"},{"size":589,"mtime":1608962347726,"results":"16","hashOfConfig":"17"},{"size":4102,"mtime":1609479338432,"results":"18","hashOfConfig":"17"},{"size":508,"mtime":1602752259957,"results":"19","hashOfConfig":"17"},{"size":2041,"mtime":1609385560789,"results":"20","hashOfConfig":"17"},{"size":2143,"mtime":1609406998492,"results":"21","hashOfConfig":"17"},{"size":831,"mtime":1608962347722,"results":"22","hashOfConfig":"17"},{"size":362,"mtime":1608962347726,"results":"23","hashOfConfig":"17"},{"size":1667,"mtime":1608962347726,"results":"24","hashOfConfig":"17"},{"size":7100,"mtime":1609475352492,"results":"25","hashOfConfig":"17"},{"size":1865,"mtime":1609417846489,"results":"26","hashOfConfig":"17"},{"size":1102,"mtime":1609417691368,"results":"27","hashOfConfig":"17"},{"size":830,"mtime":1602752265039,"results":"28","hashOfConfig":"17"},{"size":654,"mtime":1609155831265,"results":"29","hashOfConfig":"17"},{"size":1932,"mtime":1609340052397,"results":"30","hashOfConfig":"17"},{"size":842,"mtime":1609479207434,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"mc4h7q",{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"34"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/home/kripa/Documents/Weather-App/react-project/src/index.js",[],["73","74"],"/home/kripa/Documents/Weather-App/react-project/src/components/context.js",["75","76","77","78"],"import React, { useState, useContext, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport {useLocalStorageState} from './useLocalStorageState';\nimport {useSessionStorageState} from './useSessionStorageState';\n\nconst api = {\n    key: 'eba3ee12c3c0d28e4314be09645d4d8b',\n    url: 'https://api.openweathermap.org/data/2.5/weather?'\n};\n\nconst forecastUrl = `https://api.openweathermap.org/data/2.5/forecast?q=london&appid=${api.key}`;\n\nconst AppContext = React.createContext();\n\nconst AppProvider = ({children}) => {\n\n    let history = useHistory();\n\n    const [searchTerm, setSearchTerm] = useState('');\n    const [weather, setWeather] = useSessionStorageState({data: ''}, 'weatherData');\n    const [loading, setLoading] = useState(false);\n    const [recentItems, setRecentItems] = useLocalStorageState([], 'recentItems');\n    const [isCelcius, setIsCelcius] = useLocalStorageState(false, 'isCelcius');\n    const [showLinks, setShowLinks] = useState();\n\n    const addToFavorite = (cityName) => {\n        const newRecentList = recentItems.map((item) => {\n            if(item.city === cityName) {\n                const newItem = {...item, isFavorite: true};\n                return newItem;\n            }\n            return item;\n        });\n        setRecentItems(newRecentList);\n    \n    }\n\n    const fetchWeatherData = async (e, city) => {\n            e.preventDefault();\n            // setWeather({data: ''});\n            setLoading(true);\n            setSearchTerm(city);\n            const searchValue = city || searchTerm;\n            const data = await fetch(`${api.url}q=${searchValue}&units=imperial&appid=${api.key}`\n            ).then((res) => res.json())\n            .then(data => data);\n            // console.log(data);\n            setWeather({data: data});\n            setSearchTerm('');\n            setLoading(false);\n            console.log(data);\n        \n            const element = recentItems.find((item) => item.city === data.name);\n            if(element) {\n                // setRecentItems(recentItems.concat({...element, isRecent: true}));\n                // return;\n                const newRecentItems = recentItems.map((item) => {\n                    if(item.city === data.name) {\n                        return {...item, isRecent: true};\n                    }\n                    return item;\n                });\n                setRecentItems(newRecentItems);\n                return;\n            }\n            if(data.cod !== '404') {\n                const newData = {city: data.name,\n                                country: data.sys.country, \n                                icon: data.weather[0].icon, \n                                temp: data.main.temp, \n                                info: data.weather[0].description,\n                                min: data.main.temp_min,\n                                max: data.main.temp_max,\n                                precipitation: data.rain ? data.rain['1h'] : (data.snow ? data.snow['1h'] : '0'),\n                                humidity: data.main.humidity,\n                                wind: data.wind.speed,\n                                visibility: data.visibility,\n                                isFavorite: false,\n                                isRecent: true,\n                                celcius: isCelcius\n                                };\n                setRecentItems(recentItems.concat(newData));\n            }\n\n        };\n  \n\n\n    return <AppContext.Provider \n            value={{\n                searchTerm,\n                fetchWeatherData,\n                setSearchTerm,\n                loading,\n                weather,\n                setWeather,\n                addToFavorite,\n                recentItems,\n                setRecentItems,\n                isCelcius,\n                setIsCelcius,\n                showLinks,\n                setShowLinks\n            }}\n          >\n            {children}\n          </AppContext.Provider>\n};\n\n\nexport const useGlobalContext = () => {\n    return useContext(AppContext);\n}\n  \nexport { AppContext, AppProvider }","/home/kripa/Documents/Weather-App/react-project/src/components/useLocalStorageState.js",["79","80"],"import React, { useEffect, useState } from 'react';\nimport { readFromStorage, writeToStorage } from './LocalStorage';\n\nexport function useLocalStorageState(initialStateValue, storageKey) {\n    let [state, setState] = useState(() => {\n        const dataFromStore = readFromStorage(storageKey);\n        return dataFromStore || initialStateValue;\n    });\n\n    function setPersistedState(value) {\n        writeToStorage(storageKey, value);\n        setState(value);\n    }\n\n    return [state, setPersistedState];\n}","/home/kripa/Documents/Weather-App/react-project/src/components/SearchItem/SearchItem.js",["81","82","83"],"import React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './SearchItem.module.css';\nimport logo from './logo.png';\nimport { BiSearchAlt2 } from 'react-icons/bi';\nimport {useGlobalContext} from '../context';\nimport { Link, useHistory } from 'react-router-dom';\n\n\n\nconst SearchItem = props => {\n    const {searchTerm, setSearchTerm, fetchWeatherData} = useGlobalContext();\n    const searchItemRef = useRef(null);\n    let history = useHistory();\n    \n    useEffect(() => {\n        searchItemRef.current.focus();\n    }, []);\n\n    return (\n        <div className={styles.navContainer}>\n            <div className={styles.SearchItem }>\n                <img className={styles.logo} src={logo} alt='logo'/>\n                <div className={styles.searchField}>\n                    <form onSubmit={() => {\n                        history.push(\"/\");\n                        fetchWeatherData();\n                        \n                    }}>\n                        <input className={styles.searchCity}\n                        ref={searchItemRef}\n                        type='text' \n                        name='searchCity' \n                        id='searchCity' \n                        placeholder='Search City'\n                        value={searchTerm}\n                        onChange={(e) => {\n                            setSearchTerm(e.target.value);\n                            // setWeather({data: ''});\n                            // fetchWeatherData();\n                        }}\n                        // onKeyPress={fetchWeatherData}\n                        >\n                        </input>\n                        <button className={styles.searchIcon} onClick={(e) => {\n                            history.push(\"/\");\n                            fetchWeatherData(e);\n                        }}><BiSearchAlt2/></button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n\nSearchItem.propTypes = {\n\n};\n\nexport default SearchItem;",["84","85"],"/home/kripa/Documents/Weather-App/react-project/src/components/FavouriteItem/FavouriteItem.js",["86","87","88"],"import React from 'react';\nimport styles from './FavouriteItem.module.css';\nimport {FaHeart, FaRegHeart} from 'react-icons/fa';\nimport {useGlobalContext} from '../context';\nimport { Link } from 'react-router-dom';\n\nconst FavouriteItem = ({city, country, icon, temp, info, isFavorite, celcius}) => {\n    const {fetchWeatherData, searchTerm, setSearchTerm, isCelcius, recentItems, setRecentItems} = useGlobalContext();\n    const iconurl =\n    \"http://openweathermap.org/img/w/\" +\n    `${icon}` +\n    \".png\";\n\n    const redirectToHome = async (e) => {\n        await setSearchTerm(city);\n        console.log(searchTerm);\n        fetchWeatherData(e, city);\n    }\n\n\n    function titleCase(str) {\n        var splitStr = str.toLowerCase().split(' ');\n        for (var i = 0; i < splitStr.length; i++) {\n            // You do not need to check if i is larger than splitStr length, as your for does that for you\n            // Assign it back to the array\n            splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);     \n        }\n        // Directly return the joined string\n        return splitStr.join(' '); \n     }\n\n    return (\n        <Link to='/' className={styles.link} onClick={(e) => {\n            redirectToHome(e);\n        }}>\n            <span className={styles.FavouriteItem }>\n                <div className={styles.cityName}>{`${city}, ${country}`}</div>\n                <div className={styles.tempData}>\n                    <div className={styles.image}><img src={iconurl} alt='sunny'/></div>\n                    <div className={styles.tempValue}>{!celcius ? Math.round(temp) : Math.round((temp - 32) / 1.8)}<span>&#176;{celcius ? 'C' : 'F'}</span></div>\n                    <div className={styles.tempInfo}>{titleCase(info)}</div>\n                </div>\n                <div className={styles.favIcon}>\n                    {isFavorite ?\n                        <div className={styles.fav}><FaHeart/></div> :\n                        <div className={styles.notFav}><FaRegHeart/></div>\n                    }\n                </div>\n            </span>\n        </Link>\n    );\n};\n\n\nexport default FavouriteItem;\n","/home/kripa/Documents/Weather-App/react-project/src/components/Modal/Modal.js",["89"],"import React, {useState} from 'react';\nimport styles from './Modal.module.css';\n\nconst Modal = ({show, closeModal, remove, children}) => {\n\n    return (\n        <>\n            {show && <div className={styles.modalContent}>\n                <div>\n                    {children}\n                    <div className={styles.buttons}>\n                        <button className={styles.no} onClick={closeModal}>\n                            NO\n                        </button>\n                        <button className={styles.yes} onClick={() => {\n                            remove();\n                            closeModal();\n                        }}>\n                            YES\n                        </button>\n                    </div>\n                </div>\n            </div>}\n        </>\n    );\n};\n\n\nexport default Modal;",["90","91"],"/home/kripa/Documents/Weather-App/react-project/src/reportWebVitals.js",[],"/home/kripa/Documents/Weather-App/react-project/src/pages/Recent.js",[],["92","93"],"/home/kripa/Documents/Weather-App/react-project/src/components/WeatherData/WeatherData.js",["94","95","96","97","98","99","100","101"],"/home/kripa/Documents/Weather-App/react-project/src/components/NavBar/NavBar.js",["102","103","104","105","106","107"],"import React, {useEffect, useRef, useState} from 'react';\nimport { NavLink } from 'react-router-dom'\nimport { useGlobalContext } from '../context';\nimport styles from './NavBar.module.css';\n\nconst NavBar = props => {\n    const {showLinks} = useGlobalContext();\n    const displayTime = () => {\n        var d = new Date(),\n        minutes = d.getMinutes().toString().length == 1 ? '0'+d.getMinutes() : d.getMinutes(),\n        hours = d.getHours().toString().length == 1 ? '0'+d.getHours() : d.getHours(),\n        ampm = d.getHours() >= 12 ? 'PM' : 'AM',\n        months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'],\n        days = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];\n        return [(days[d.getDay()]+', '+months[d.getMonth()]+' '+d.getDate()+' '+d.getFullYear()), (hours+':'+minutes+ ' '+ampm)];\n    };\n\n    return (\n        <>\n        {<div className={styles.navContainer}>\n            \n            <nav className={styles.navbar}>\n                <div className={styles.navCenter}>\n                    <ul className={styles.navLinks}>\n                    <li>\n                        <NavLink exact activeClassName={styles.selected} to=\"/\" className={styles.navItem} >Home</NavLink>\n                    </li>\n                    <li>\n                        <NavLink activeClassName={styles.selected} to=\"/favorites\" className={styles.navItem}>Favourite</NavLink>\n                    </li>\n                    <li>\n                        <NavLink activeClassName={styles.selected} to=\"/recent\" className={styles.navItem}>Recent Search</NavLink>\n                    </li>\n                    </ul>\n                </div>\n            </nav>\n\n            <div className={styles.date}>{displayTime()[0]}<span>{displayTime()[1]}</span></div>\n        </div>}\n        </>\n    );\n};\n\n\nNavBar.propTypes = {\n\n};\n\nexport default NavBar;","/home/kripa/Documents/Weather-App/react-project/src/App.js",["108","109","110","111","112","113"],"/home/kripa/Documents/Weather-App/react-project/src/components/LocalStorage.js",[],"/home/kripa/Documents/Weather-App/react-project/src/pages/Home.js",[],"/home/kripa/Documents/Weather-App/react-project/src/pages/Favorite.js",["114","115"],"import React, {useState} from 'react';\nimport {useGlobalContext} from '../components/context';\nimport icon from './icon_nothing.png';\nimport './pages.css';\nimport Modal from '../components/Modal/Modal';\nimport FavouriteItem from '../components/FavouriteItem/FavouriteItem';\n\nconst Favorites = () => {\n  const {recentItems, setRecentItems, fetchWeatherData, weather} = useGlobalContext();\n  const [show, setShow] = useState(false)\n\n  const closeModal = () => {\n    setShow(false);\n  }\n\n  const favoriteItems = recentItems.filter((item) => item.isFavorite);\n  // setFavorites(favoriteItems);\n  // if(favoriteItems) {\n  //   setFavorites(favoriteItems);\n  // } else {\n  //   setFavorites([]);\n  // }\n\n  const remove = () => {\n    const newFavItems = recentItems.map((item) => {\n      return {...item, isFavorite: false};\n    });\n    setRecentItems(newFavItems);\n\n    // setFavorites([]);\n  }\n\n  return (\n    <div className='favourite'>\n      {favoriteItems.length !== 0 ? \n      <div className='favoriteCities'>\n        <div className='favoriteHeader'>\n          <div className='favTitle'>\n            {favoriteItems.length} <span>{favoriteItems.length > 1 ? 'Cities' : 'City'}</span> added as favorite\n          </div>\n          <button className='remove' onClick={() => setShow(true)}>Remove All</button>\n        </div>\n        <div className='favouriteItems'>\n          {favoriteItems.map((item, index) => {\n            return <FavouriteItem key={index} {...item}/>\n          })}\n        </div>\n        {show && <Modal show={show} closeModal={closeModal} remove={remove}>\n          <div className='modalText'>\n            Are you sure want to remove all the favourites?\n          </div>\n        </Modal>}\n      </div> : \n      <div className='noFavorite'>\n        <img src={icon} alt='No Favorites'/>\n        <div className='noFavoriteText'>No Favourites Added</div>\n      </div>\n      }\n    </div>\n  );\n}\n\nexport default Favorites;","/home/kripa/Documents/Weather-App/react-project/src/components/SessionStorage.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":1,"column":39,"nodeType":"122","messageId":"123","endLine":1,"endColumn":48},{"ruleId":"120","severity":1,"message":"124","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":14},{"ruleId":"120","severity":1,"message":"125","line":11,"column":7,"nodeType":"122","messageId":"123","endLine":11,"endColumn":18},{"ruleId":"120","severity":1,"message":"126","line":17,"column":9,"nodeType":"122","messageId":"123","endLine":17,"endColumn":16},{"ruleId":"120","severity":1,"message":"127","line":1,"column":8,"nodeType":"122","messageId":"123","endLine":1,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":26},{"ruleId":"120","severity":1,"message":"128","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":25},{"ruleId":"120","severity":1,"message":"129","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":17},{"ruleId":"120","severity":1,"message":"124","line":7,"column":10,"nodeType":"122","messageId":"123","endLine":7,"endColumn":14},{"ruleId":"116","replacedBy":"130"},{"ruleId":"118","replacedBy":"131"},{"ruleId":"120","severity":1,"message":"132","line":8,"column":57,"nodeType":"122","messageId":"123","endLine":8,"endColumn":66},{"ruleId":"120","severity":1,"message":"133","line":8,"column":68,"nodeType":"122","messageId":"123","endLine":8,"endColumn":79},{"ruleId":"120","severity":1,"message":"134","line":8,"column":81,"nodeType":"122","messageId":"123","endLine":8,"endColumn":95},{"ruleId":"120","severity":1,"message":"128","line":1,"column":16,"nodeType":"122","messageId":"123","endLine":1,"endColumn":24},{"ruleId":"116","replacedBy":"135"},{"ruleId":"118","replacedBy":"136"},{"ruleId":"116","replacedBy":"137"},{"ruleId":"118","replacedBy":"138"},{"ruleId":"120","severity":1,"message":"128","line":1,"column":16,"nodeType":"122","messageId":"123","endLine":1,"endColumn":24},{"ruleId":"120","severity":1,"message":"139","line":3,"column":10,"nodeType":"122","messageId":"123","endLine":3,"endColumn":29},{"ruleId":"120","severity":1,"message":"140","line":3,"column":40,"nodeType":"122","messageId":"123","endLine":3,"endColumn":66},{"ruleId":"120","severity":1,"message":"141","line":3,"column":80,"nodeType":"122","messageId":"123","endLine":3,"endColumn":86},{"ruleId":"120","severity":1,"message":"142","line":4,"column":9,"nodeType":"122","messageId":"123","endLine":4,"endColumn":18},{"ruleId":"120","severity":1,"message":"143","line":5,"column":9,"nodeType":"122","messageId":"123","endLine":5,"endColumn":21},{"ruleId":"120","severity":1,"message":"144","line":7,"column":9,"nodeType":"122","messageId":"123","endLine":7,"endColumn":29},{"ruleId":"145","severity":1,"message":"146","line":18,"column":26,"nodeType":"147","messageId":"148","endLine":18,"endColumn":28},{"ruleId":"120","severity":1,"message":"121","line":1,"column":16,"nodeType":"122","messageId":"123","endLine":1,"endColumn":25},{"ruleId":"120","severity":1,"message":"149","line":1,"column":27,"nodeType":"122","messageId":"123","endLine":1,"endColumn":33},{"ruleId":"120","severity":1,"message":"128","line":1,"column":35,"nodeType":"122","messageId":"123","endLine":1,"endColumn":43},{"ruleId":"120","severity":1,"message":"150","line":7,"column":12,"nodeType":"122","messageId":"123","endLine":7,"endColumn":21},{"ruleId":"145","severity":1,"message":"151","line":10,"column":52,"nodeType":"147","messageId":"148","endLine":10,"endColumn":54},{"ruleId":"145","severity":1,"message":"151","line":11,"column":48,"nodeType":"147","messageId":"148","endLine":11,"endColumn":50},{"ruleId":"120","severity":1,"message":"128","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":25},{"ruleId":"120","severity":1,"message":"124","line":2,"column":50,"nodeType":"122","messageId":"123","endLine":2,"endColumn":54},{"ruleId":"120","severity":1,"message":"152","line":9,"column":9,"nodeType":"122","messageId":"123","endLine":9,"endColumn":15},{"ruleId":"120","severity":1,"message":"126","line":13,"column":7,"nodeType":"122","messageId":"123","endLine":13,"endColumn":14},{"ruleId":"120","severity":1,"message":"150","line":14,"column":10,"nodeType":"122","messageId":"123","endLine":14,"endColumn":19},{"ruleId":"120","severity":1,"message":"153","line":14,"column":21,"nodeType":"122","messageId":"123","endLine":14,"endColumn":33},{"ruleId":"120","severity":1,"message":"154","line":9,"column":39,"nodeType":"122","messageId":"123","endLine":9,"endColumn":55},{"ruleId":"120","severity":1,"message":"155","line":9,"column":57,"nodeType":"122","messageId":"123","endLine":9,"endColumn":64},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'forecastUrl' is assigned a value but never used.","'history' is assigned a value but never used.","'React' is defined but never used.","'useState' is defined but never used.","'PropTypes' is defined but never used.",["156"],["157"],"'isCelcius' is assigned a value but never used.","'recentItems' is assigned a value but never used.","'setRecentItems' is assigned a value but never used.",["156"],["157"],["156"],["157"],"'FaCloudShowersHeavy' is defined but never used.","'FaThermometerThreeQuarters' is defined but never used.","'FaWind' is defined but never used.","'BsDroplet' is defined but never used.","'MdVisibility' is defined but never used.","'useLocalStorageState' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useRef' is defined but never used.","'showLinks' is assigned a value but never used.","Expected '===' and instead saw '=='.","'FaBars' is defined but never used.","'setShowLinks' is assigned a value but never used.","'fetchWeatherData' is assigned a value but never used.","'weather' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]